@model UberTappDeveloping.Models.ApplicationUser
@using Microsoft.AspNet.Identity
@using UberTappDeveloping.Helper.Roles;

@*<style></style>*@
<link href="~/Content/KotsDisplay.css" rel="stylesheet" />
@*<style></style>*@

<body class="body">
    <div class="container-fluid">

        <div class="row">
            <div class="form-group col-md-4">
                <h2>Profile Details</h2>
            </div>
        </div>

        <div class="row">
            <div id="profileDetBtn" class="form-group col-md-6">
                @if (User.IsInRole(RoleNames.Admin))
                {
                    <button class="btn btn-sm btn-info">@Html.ActionLink("All Users", "AllUsers", null, new { title = "View All Users" })</button>
                }
                else
                {
                    <button class="btn btn-sm btn-success">@Html.ActionLink("Edit", "Edit", new { Id = User.Identity.GetUserId() }, new { title = "Update Profile" })</button>
                    <button id="deleteBtn" class="btn btn-sm btn-danger" title="Delete Profile">Delete</button>
                }

            </div>
        </div>

        <table class="table table-hover">
            <tbody>
                <tr>
                    <td>First Name</td>
                    @if (Model.FirstName == null)
                    {
                        <td><i>First Name not assigned</i></td>
                    }
                    else
                    {
                        <td>@Html.DisplayFor(model => model.FirstName)</td>
                    }
                </tr>
                <tr>
                    <td>Last Name</td>
                    @if (Model.LastName == null)
                    {
                        <td><i>Last Name not assigned</i></td>
                    }
                    else
                    {
                        <td>@Html.DisplayFor(model => model.LastName)</td>
                    }
                </tr>
                <tr>
                    <td>Date Of Birth</td>
                    @if (Model.BirthDate == null)
                    {
                        <td><i>Date Of Birth not assigned</i></td>
                    }
                    else
                    {
                        <td>@Html.DisplayFor(model => model.BirthDate)</td>
                    }
                </tr>
                <tr>
                    <td>Gender</td>
                    @if (Model.Gender == null)
                    {
                        <td><i>Gender not assigned</i></td>
                    }
                    else
                    {
                        <td>@Html.DisplayFor(model => model.Gender)</td>
                    }
                </tr>
                <tr>
                    <td>Location</td>
                    <td>
                        @Html.DisplayFor(model => model.Location.Display)
                        <input id="submit" type="button" value="View Location" />
                        <input id="latlng" type="text" value="@Model.Location.Latitude,@Model.Location.Longitude" hidden />
                    </td>
                </tr>
                <tr>
                    <td>Email</td>
                    <td>@Html.DisplayFor(model => model.Email)</td>
                </tr>
                <tr>
                    <td>Username</td>
                    <td>@Html.DisplayFor(model => model.UserName)</td>
                </tr>
            </tbody>
        </table>

        <div id="map"></div>

    </div>
</body>

@section Scripts
{

    <script>

        $(document).ready(function () {
            $("#deleteBtn").on("click", function () {
                bootbox.alert('You cannot delete your profile! If you wish to unsubscribe' +
                    ' from UberTapp please click on "Contact => Report An Issue" and submit a request!');
            });
        });

    </script>

    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCpBZayreKhUYLqBhdUADi20brDXGV3EUU&callback=initMap&libraries=&v=weekly" defer></script>

    <script>

        function initMap() {
            const map = new google.maps.Map(document.getElementById("map"), {
                zoom: 6,
                center: { lat: 39.0742, lng: 21.8243 },
            });
            const geocoder = new google.maps.Geocoder();
            const infowindow = new google.maps.InfoWindow();
            document.getElementById("submit").addEventListener("click", () => {
                geocodeLatLng(geocoder, map, infowindow);
            });
        }

        function geocodeLatLng(geocoder, map, infowindow) {
            const input = document.getElementById("latlng").value;
            const latlngStr = input.split(",", 2);
            const latlng = {
                lat: parseFloat(latlngStr[0]),
                lng: parseFloat(latlngStr[1]),
            };
            geocoder.geocode({ location: latlng }, (results, status) => {
                if (status === "OK") {
                    if (results[0]) {
                        map.setZoom(10);
                        const marker = new google.maps.Marker({
                            position: latlng,
                            map: map,
                            center:  latlng 
                        });
                        infowindow.setContent(results[0].formatted_address);
                        infowindow.open(map, marker);
                    } else {
                        bootbox.alert("No results found");
                    }
                } else {
                    bootbox.alert("Geocoder failed due to: " + status);
                }
            });
        }

    </script>

}

